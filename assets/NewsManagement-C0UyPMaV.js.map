{"version":3,"file":"NewsManagement-C0UyPMaV.js","sources":["../../src/components/admin/news/NewsEditor.tsx","../../src/pages/admin/NewsManagement.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport {\r\n  Select,\r\n  SelectContent,\r\n  SelectItem,\r\n  SelectTrigger,\r\n  SelectValue,\r\n} from '@/components/ui/select';\r\nimport { X, Save } from 'lucide-react';\r\n\r\ninterface NewsItem {\r\n  id: string;\r\n  title: string;\r\n  excerpt: string;\r\n  content: string;\r\n  category: 'matches' | 'club';\r\n  date: string;\r\n  time: string;\r\n  image: string;\r\n  views: number;\r\n}\r\n\r\ninterface NewsEditorProps {\r\n  news: NewsItem;\r\n  onSave: (news: NewsItem) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst NewsEditor: React.FC<NewsEditorProps> = ({ news, onSave, onCancel }) => {\r\n  const [formData, setFormData] = useState<NewsItem>(news);\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement> | { name: string; value: string }\r\n  ) => {\r\n    const { name, value } = 'target' in e ? e.target : e;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    onSave(formData);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Card className=\"p-6\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <Label htmlFor=\"title\">Заголовок</Label>\r\n              <Input\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={formData.title}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Label htmlFor=\"excerpt\">Краткое описание</Label>\r\n              <Textarea\r\n                id=\"excerpt\"\r\n                name=\"excerpt\"\r\n                value={formData.excerpt}\r\n                onChange={handleChange}\r\n                required\r\n                rows={3}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Label htmlFor=\"content\">Содержание новости</Label>\r\n              <Textarea\r\n                id=\"content\"\r\n                name=\"content\"\r\n                value={formData.content}\r\n                onChange={handleChange}\r\n                required\r\n                rows={10}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <Label htmlFor=\"image\">URL изображения</Label>\r\n              <Input\r\n                id=\"image\"\r\n                name=\"image\"\r\n                value={formData.image}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              {formData.image && (\r\n                <div className=\"mt-2 rounded-lg overflow-hidden aspect-video\">\r\n                  <img\r\n                    src={formData.image}\r\n                    alt=\"Preview\"\r\n                    className=\"w-full h-full object-cover\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              <Label htmlFor=\"category\">Категория</Label>\r\n              <Select \r\n                value={formData.category} \r\n                onValueChange={(value) => handleChange({ name: 'category', value })}\r\n              >\r\n                <SelectTrigger>\r\n                  <SelectValue />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectItem value=\"matches\">Матчи</SelectItem>\r\n                  <SelectItem value=\"club\">Клуб</SelectItem>\r\n                </SelectContent>\r\n              </Select>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-2 gap-4\">\r\n              <div>\r\n                <Label htmlFor=\"date\">Дата</Label>\r\n                <Input\r\n                  id=\"date\"\r\n                  name=\"date\"\r\n                  type=\"text\"\r\n                  value={formData.date}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"time\">Время</Label>\r\n                <Input\r\n                  id=\"time\"\r\n                  name=\"time\"\r\n                  type=\"text\"\r\n                  value={formData.time}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex justify-end space-x-2 mt-6 pt-4 border-t\">\r\n          <Button variant=\"outline\" type=\"button\" onClick={onCancel}>\r\n            <X className=\"mr-2 h-4 w-4\" /> Отмена\r\n          </Button>\r\n          <Button type=\"submit\" className=\"bg-fc-green hover:bg-fc-darkGreen\">\r\n            <Save className=\"mr-2 h-4 w-4\" /> Сохранить\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewsEditor;","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Plus, Newspaper, Pencil, Trash } from 'lucide-react';\r\nimport { toast } from '@/components/ui/use-toast';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogFooter,\r\n} from '@/components/ui/dialog';\r\nimport NewsEditor from '@/components/admin/news/NewsEditor';\r\nimport { NewsItem, getAllNews, createNews, updateNews, deleteNews } from '@/utils/news/newsOperations';\r\n\r\nconst NewsManagement = () => {\r\n  const [news, setNews] = useState<NewsItem[]>([]);\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [currentNews, setCurrentNews] = useState<NewsItem | null>(null);\r\n  const [confirmDelete, setConfirmDelete] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    setNews(getAllNews());\r\n  }, []);\r\n\r\n  const handleAddNew = () => {\r\n    const newNewsItem: NewsItem = {\r\n      id: `news-${Date.now()}`,\r\n      title: '',\r\n      excerpt: '',\r\n      content: '',\r\n      category: 'club',\r\n      date: new Date().toLocaleDateString('ru-RU'),\r\n      time: new Date().toLocaleTimeString('ru-RU', { hour: '2-digit', minute: '2-digit' }),\r\n      image: '',\r\n      views: 0\r\n    };\r\n    setCurrentNews(newNewsItem);\r\n    setEditMode(true);\r\n  };\r\n\r\n  const handleEdit = (newsItem: NewsItem) => {\r\n    setCurrentNews(newsItem);\r\n    setEditMode(true);\r\n  };\r\n\r\n  const handleConfirmDelete = (newsId: string) => {\r\n    setConfirmDelete(newsId);\r\n  };\r\n\r\n  const handleDeleteConfirmed = () => {\r\n    if (!confirmDelete) return;\r\n    \r\n    try {\r\n      deleteNews(confirmDelete);\r\n      setNews(getAllNews());\r\n      toast({\r\n        title: \"Новость удалена\",\r\n        description: \"Новость была успешно удалена\",\r\n      });\r\n    } catch (error) {\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Ошибка\",\r\n        description: \"Не удалось удалить новость\",\r\n      });\r\n    }\r\n    setConfirmDelete(null);\r\n  };\r\n\r\n  const handleSave = (updatedNews: NewsItem) => {\r\n    try {\r\n      const isExisting = news.some(n => n.id === updatedNews.id);\r\n      if (isExisting) {\r\n        updateNews(updatedNews);\r\n        toast({\r\n          title: \"Новость обновлена\",\r\n          description: \"Новость успешно обновлена\",\r\n        });\r\n      } else {\r\n        createNews(updatedNews);\r\n        toast({\r\n          title: \"Новость добавлена\",\r\n          description: \"Новая новость успешно добавлена\",\r\n        });\r\n      }\r\n      setNews(getAllNews());\r\n      setEditMode(false);\r\n      setCurrentNews(null);\r\n    } catch (error) {\r\n      toast({\r\n        variant: \"destructive\",\r\n        title: \"Ошибка\",\r\n        description: \"Не удалось сохранить новость\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setEditMode(false);\r\n    setCurrentNews(null);\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setConfirmDelete(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"mb-8 bg-gradient-to-br from-white to-gray-50\">\r\n        <CardHeader className=\"flex flex-row items-center justify-between\">\r\n          <CardTitle>\r\n            <div className=\"flex items-center\">\r\n              <div className=\"w-8 h-8 rounded-full bg-fc-green mr-3 flex items-center justify-center\">\r\n                <Newspaper className=\"h-4 w-4 text-white\" />\r\n              </div>\r\n              <span>Управление новостями</span>\r\n            </div>\r\n          </CardTitle>\r\n          <Button onClick={handleAddNew} className=\"bg-fc-green hover:bg-fc-darkGreen\">\r\n            <Plus className=\"mr-2 h-4 w-4\" /> Добавить новость\r\n          </Button>\r\n        </CardHeader>\r\n      </Card>\r\n\r\n      {editMode && currentNews ? (\r\n        <NewsEditor\r\n          news={currentNews}\r\n          onSave={handleSave}\r\n          onCancel={handleCancel}\r\n        />\r\n      ) : (\r\n        <div className=\"grid gap-4\">\r\n          {news.map((item) => (\r\n            <Card key={item.id} className=\"p-6\">\r\n              <div className=\"flex items-start justify-between\">\r\n                <div className=\"flex gap-4\">\r\n                  <div className=\"w-24 h-24 rounded-lg overflow-hidden\">\r\n                    <img \r\n                      src={item.image || '/placeholder.svg'} \r\n                      alt={item.title}\r\n                      className=\"w-full h-full object-cover\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"text-lg font-bold mb-2\">{item.title}</h3>\r\n                    <p className=\"text-gray-600 text-sm mb-2\">{item.excerpt}</p>\r\n                    <div className=\"flex items-center text-sm text-gray-500\">\r\n                      <span className=\"px-2 py-1 rounded-full bg-gray-100 text-xs mr-2\">\r\n                        {item.category === 'matches' ? 'Матчи' : 'Клуб'}\r\n                      </span>\r\n                      <span>{item.date} {item.time}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex gap-2\">\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    onClick={() => handleEdit(item)}\r\n                    className=\"text-gray-500 hover:text-gray-700\"\r\n                  >\r\n                    <Pencil className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"ghost\"\r\n                    size=\"icon\"\r\n                    onClick={() => handleConfirmDelete(item.id)}\r\n                    className=\"text-red-500 hover:text-red-700\"\r\n                  >\r\n                    <Trash className=\"h-4 w-4\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Card>\r\n          ))}\r\n\r\n          {news.length === 0 && (\r\n            <Card className=\"p-12 text-center\">\r\n              <div className=\"text-gray-500 mb-4\">Новости не найдены</div>\r\n              <Button onClick={handleAddNew} variant=\"outline\">\r\n                <Plus className=\"mr-2 h-4 w-4\" /> Добавить первую новость\r\n              </Button>\r\n            </Card>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <Dialog open={!!confirmDelete} onOpenChange={() => setConfirmDelete(null)}>\r\n        <DialogContent>\r\n          <DialogHeader>\r\n            <DialogTitle>Подтверждение удаления</DialogTitle>\r\n            <DialogDescription>\r\n              Вы уверены, что хотите удалить эту новость? Это действие нельзя будет отменить.\r\n            </DialogDescription>\r\n          </DialogHeader>\r\n          <DialogFooter>\r\n            <Button variant=\"outline\" onClick={handleCancelDelete}>Отмена</Button>\r\n            <Button variant=\"destructive\" onClick={handleDeleteConfirmed}>Удалить</Button>\r\n          </DialogFooter>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewsManagement;"],"names":["NewsEditor","news","onSave","onCancel","formData","setFormData","useState","handleChange","e","name","value","prev","handleSubmit","jsxs","Card","jsx","Label","Input","Textarea","Select","SelectTrigger","SelectValue","SelectContent","SelectItem","Button","X","Save","NewsManagement","setNews","editMode","setEditMode","currentNews","setCurrentNews","confirmDelete","setConfirmDelete","useEffect","getAllNews","handleAddNew","newNewsItem","handleEdit","newsItem","handleConfirmDelete","newsId","handleDeleteConfirmed","deleteNews","toast","handleSave","updatedNews","n","updateNews","createNews","handleCancel","handleCancelDelete","CardHeader","CardTitle","Newspaper","Plus","item","Pencil","Trash","Dialog","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter"],"mappings":"ooBAiCA,MAAMA,EAAwC,CAAC,CAAE,KAAAC,EAAM,OAAAC,EAAQ,SAAAC,KAAe,CAC5E,KAAM,CAACC,EAAUC,CAAW,EAAIC,WAAmBL,CAAI,EAEjDM,EACJC,GACG,CACH,KAAM,CAAE,KAAAC,EAAM,MAAAC,GAAU,WAAYF,EAAIA,EAAE,OAASA,EACnDH,EAAqBM,IAAA,CACnB,GAAGA,EACH,CAACF,CAAI,EAAGC,CACR,EAAA,CAAA,EAGEE,EAAgBJ,GAAuB,CAC3CA,EAAE,eAAe,EACjBN,EAAOE,CAAQ,CAAA,EAGjB,aACG,OAAK,CAAA,SAAUQ,EACd,SAACC,EAAA,KAAAC,EAAA,CAAK,UAAU,MACd,SAAA,CAACD,EAAAA,KAAA,MAAA,CAAI,UAAU,wCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACE,EAAA,IAAAC,EAAA,CAAM,QAAQ,QAAQ,SAAS,YAAA,EAChCD,EAAA,IAACE,EAAA,CACC,GAAG,QACH,KAAK,QACL,MAAOb,EAAS,MAChB,SAAUG,EACV,SAAQ,EAAA,CACV,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACQ,EAAA,IAAAC,EAAA,CAAM,QAAQ,UAAU,SAAgB,mBAAA,EACzCD,EAAA,IAACG,EAAA,CACC,GAAG,UACH,KAAK,UACL,MAAOd,EAAS,QAChB,SAAUG,EACV,SAAQ,GACR,KAAM,CAAA,CACR,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACQ,EAAA,IAAAC,EAAA,CAAM,QAAQ,UAAU,SAAkB,qBAAA,EAC3CD,EAAA,IAACG,EAAA,CACC,GAAG,UACH,KAAK,UACL,MAAOd,EAAS,QAChB,SAAUG,EACV,SAAQ,GACR,KAAM,EAAA,CACR,CAAA,EACF,CAAA,EACF,EAEAM,EAAAA,KAAC,MAAI,CAAA,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACE,EAAA,IAAAC,EAAA,CAAM,QAAQ,QAAQ,SAAe,kBAAA,EACtCD,EAAA,IAACE,EAAA,CACC,GAAG,QACH,KAAK,QACL,MAAOb,EAAS,MAChB,SAAUG,EACV,SAAQ,EAAA,CACV,EACCH,EAAS,OACPW,MAAA,MAAA,CAAI,UAAU,+CACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAKX,EAAS,MACd,IAAI,UACJ,UAAU,4BAAA,CAAA,EAEd,CAAA,EAEJ,SAEC,MACC,CAAA,SAAA,CAACW,EAAA,IAAAC,EAAA,CAAM,QAAQ,WAAW,SAAS,YAAA,EACnCH,EAAA,KAACM,EAAA,CACC,MAAOf,EAAS,SAChB,cAAgBM,GAAUH,EAAa,CAAE,KAAM,WAAY,MAAAG,EAAO,EAElE,SAAA,CAACK,EAAA,IAAAK,EAAA,CACC,SAACL,EAAA,IAAAM,EAAA,CAAY,CAAA,EACf,SACCC,EACC,CAAA,SAAA,CAACP,EAAA,IAAAQ,EAAA,CAAW,MAAM,UAAU,SAAK,QAAA,EAChCR,EAAA,IAAAQ,EAAA,CAAW,MAAM,OAAO,SAAI,OAAA,CAAA,EAC/B,CAAA,CAAA,CACF,CAAA,EACF,EAEAV,EAAAA,KAAC,MAAI,CAAA,UAAU,yBACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACE,EAAA,IAAAC,EAAA,CAAM,QAAQ,OAAO,SAAI,OAAA,EAC1BD,EAAA,IAACE,EAAA,CACC,GAAG,OACH,KAAK,OACL,KAAK,OACL,MAAOb,EAAS,KAChB,SAAUG,EACV,SAAQ,EAAA,CACV,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACQ,EAAA,IAAAC,EAAA,CAAM,QAAQ,OAAO,SAAK,QAAA,EAC3BD,EAAA,IAACE,EAAA,CACC,GAAG,OACH,KAAK,OACL,KAAK,OACL,MAAOb,EAAS,KAChB,SAAUG,EACV,SAAQ,EAAA,CACV,CAAA,EACF,CAAA,EACF,CAAA,EACF,CAAA,EACF,EAEAM,EAAAA,KAAC,MAAI,CAAA,UAAU,gDACb,SAAA,CAAAA,OAACW,GAAO,QAAQ,UAAU,KAAK,SAAS,QAASrB,EAC/C,SAAA,CAACY,EAAAA,IAAAU,EAAA,CAAE,UAAU,cAAe,CAAA,EAAE,SAAA,EAChC,EACCZ,EAAA,KAAAW,EAAA,CAAO,KAAK,SAAS,UAAU,oCAC9B,SAAA,CAACT,EAAAA,IAAAW,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,YAAA,EACnC,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,ECxJMC,GAAiB,IAAM,CAC3B,KAAM,CAAC1B,EAAM2B,CAAO,EAAItB,EAAA,SAAqB,CAAE,CAAA,EACzC,CAACuB,EAAUC,CAAW,EAAIxB,WAAS,EAAK,EACxC,CAACyB,EAAaC,CAAc,EAAI1B,WAA0B,IAAI,EAC9D,CAAC2B,EAAeC,CAAgB,EAAI5B,WAAwB,IAAI,EAEtE6B,EAAAA,UAAU,IAAM,CACdP,EAAQQ,GAAY,CACtB,EAAG,CAAE,CAAA,EAEL,MAAMC,EAAe,IAAM,CACzB,MAAMC,EAAwB,CAC5B,GAAI,QAAQ,KAAK,IAAK,CAAA,GACtB,MAAO,GACP,QAAS,GACT,QAAS,GACT,SAAU,OACV,KAAM,IAAI,OAAO,mBAAmB,OAAO,EAC3C,KAAU,IAAA,KAAO,EAAA,mBAAmB,QAAS,CAAE,KAAM,UAAW,OAAQ,UAAW,EACnF,MAAO,GACP,MAAO,CAAA,EAETN,EAAeM,CAAW,EAC1BR,EAAY,EAAI,CAAA,EAGZS,EAAcC,GAAuB,CACzCR,EAAeQ,CAAQ,EACvBV,EAAY,EAAI,CAAA,EAGZW,EAAuBC,GAAmB,CAC9CR,EAAiBQ,CAAM,CAAA,EAGnBC,EAAwB,IAAM,CAClC,GAAKV,EAED,IAAA,CACFW,EAAWX,CAAa,EACxBL,EAAQQ,GAAY,EACdS,EAAA,CACJ,MAAO,kBACP,YAAa,8BAAA,CACd,OACa,CACRA,EAAA,CACJ,QAAS,cACT,MAAO,SACP,YAAa,4BAAA,CACd,CACH,CACAX,EAAiB,IAAI,EAAA,EAGjBY,EAAcC,GAA0B,CACxC,GAAA,CACiB9C,EAAK,QAAU+C,EAAE,KAAOD,EAAY,EAAE,GAEvDE,EAAWF,CAAW,EAChBF,EAAA,CACJ,MAAO,oBACP,YAAa,2BAAA,CACd,IAEDK,EAAWH,CAAW,EAChBF,EAAA,CACJ,MAAO,oBACP,YAAa,iCAAA,CACd,GAEHjB,EAAQQ,GAAY,EACpBN,EAAY,EAAK,EACjBE,EAAe,IAAI,OACL,CACRa,EAAA,CACJ,QAAS,cACT,MAAO,SACP,YAAa,8BAAA,CACd,CACH,CAAA,EAGIM,EAAe,IAAM,CACzBrB,EAAY,EAAK,EACjBE,EAAe,IAAI,CAAA,EAGfoB,EAAqB,IAAM,CAC/BlB,EAAiB,IAAI,CAAA,EAGvB,cACG,MACC,CAAA,SAAA,CAAAnB,EAAAA,IAACD,GAAK,UAAU,+CACd,SAACD,EAAA,KAAAwC,EAAA,CAAW,UAAU,6CACpB,SAAA,CAAAtC,MAACuC,EACC,CAAA,SAAAzC,EAAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAAAE,EAAAA,IAAC,OAAI,UAAU,yEACb,eAACwC,EAAU,CAAA,UAAU,qBAAqB,CAC5C,CAAA,EACAxC,EAAAA,IAAC,QAAK,SAAoB,sBAAA,CAAA,CAAA,CAAA,CAC5B,CACF,CAAA,EACCF,EAAA,KAAAW,EAAA,CAAO,QAASa,EAAc,UAAU,oCACvC,SAAA,CAACtB,EAAAA,IAAAyC,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,mBAAA,EACnC,CAAA,CAAA,CACF,CACF,CAAA,EAEC3B,GAAYE,EACXhB,EAAA,IAACf,EAAA,CACC,KAAM+B,EACN,OAAQe,EACR,SAAUK,CAAA,CAGZ,EAAAtC,EAAA,KAAC,MAAI,CAAA,UAAU,aACZ,SAAA,CAAKZ,EAAA,IAAKwD,GACR1C,EAAAA,IAAAD,EAAA,CAAmB,UAAU,MAC5B,SAAAD,EAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,aACb,SAAA,CAACE,EAAAA,IAAA,MAAA,CAAI,UAAU,uCACb,SAAAA,EAAA,IAAC,MAAA,CACC,IAAK0C,EAAK,OAAS,mBACnB,IAAKA,EAAK,MACV,UAAU,4BAAA,CAAA,EAEd,SACC,MACC,CAAA,SAAA,CAAA1C,EAAA,IAAC,KAAG,CAAA,UAAU,yBAA0B,SAAA0C,EAAK,MAAM,EAClD1C,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA8B,WAAK,QAAQ,EACxDF,EAAAA,KAAC,MAAI,CAAA,UAAU,0CACb,SAAA,CAAAE,EAAAA,IAAC,QAAK,UAAU,kDACb,WAAK,WAAa,UAAY,QAAU,MAC3C,CAAA,SACC,OAAM,CAAA,SAAA,CAAK0C,EAAA,KAAK,IAAEA,EAAK,IAAA,EAAK,CAAA,EAC/B,CAAA,EACF,CAAA,EACF,EACA5C,EAAAA,KAAC,MAAI,CAAA,UAAU,aACb,SAAA,CAAAE,EAAA,IAACS,EAAA,CACC,QAAQ,QACR,KAAK,OACL,QAAS,IAAMe,EAAWkB,CAAI,EAC9B,UAAU,oCAEV,SAAA1C,EAAAA,IAAC2C,EAAO,CAAA,UAAU,SAAU,CAAA,CAAA,CAC9B,EACA3C,EAAA,IAACS,EAAA,CACC,QAAQ,QACR,KAAK,OACL,QAAS,IAAMiB,EAAoBgB,EAAK,EAAE,EAC1C,UAAU,kCAEV,SAAA1C,EAAAA,IAAC4C,EAAM,CAAA,UAAU,SAAU,CAAA,CAAA,CAC7B,CAAA,EACF,CACF,CAAA,CAAA,CAAA,EAvCSF,EAAK,EAwChB,CACD,EAEAxD,EAAK,SAAW,GACdY,EAAA,KAAAC,EAAA,CAAK,UAAU,mBACd,SAAA,CAACC,EAAA,IAAA,MAAA,CAAI,UAAU,qBAAqB,SAAkB,qBAAA,EACrDF,EAAA,KAAAW,EAAA,CAAO,QAASa,EAAc,QAAQ,UACrC,SAAA,CAACtB,EAAAA,IAAAyC,EAAA,CAAK,UAAU,cAAe,CAAA,EAAE,0BAAA,EACnC,CAAA,EACF,CAAA,EAEJ,EAGDzC,EAAAA,IAAA6C,EAAA,CAAO,KAAM,CAAC,CAAC3B,EAAe,aAAc,IAAMC,EAAiB,IAAI,EACtE,SAAArB,EAAA,KAACgD,EACC,CAAA,SAAA,CAAAhD,OAACiD,EACC,CAAA,SAAA,CAAA/C,EAAAA,IAACgD,GAAY,SAAsB,wBAAA,CAAA,EACnChD,EAAAA,IAACiD,GAAkB,SAEnB,iFAAA,CAAA,CAAA,EACF,SACCC,EACC,CAAA,SAAA,CAAAlD,MAACS,EAAO,CAAA,QAAQ,UAAU,QAAS4B,EAAoB,SAAM,SAAA,QAC5D5B,EAAO,CAAA,QAAQ,cAAc,QAASmB,EAAuB,SAAO,UAAA,CAAA,EACvE,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ"}